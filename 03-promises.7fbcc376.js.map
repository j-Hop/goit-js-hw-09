{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAeC,SAASC,cAAc,SACtCC,EAAO,CACXC,WAAYH,SAASC,cAAc,kBACnCG,UAAWJ,SAASC,cAAc,iBAClCI,OAAQL,SAASC,cAAc,oBAkBjC,SAASK,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtB,IAAIC,SAAQ,SAACC,EAASC,GACpCC,YAAW,WACLN,EACNI,IAEAC,G,GACGN,E,IAGNQ,MAAK,WACDnB,EAAAoB,OAAOC,QAAQ,uBAAwCC,OAAfZ,EAAS,QAAYY,OAANX,EAAM,M,IAEjEY,OAAM,WACFvB,EAAAoB,OAAOI,QAAQ,sBAAqCF,OAAfZ,EAAS,QAAYY,OAANX,EAAM,M,IA/B/DT,EAAauB,iBAAiB,UAE9B,SAAsBC,GACtBA,EAAMC,iBAMN,IAJA,IAAIrB,EAAasB,OAAOvB,EAAKC,WAAWuB,OACpCtB,EAAYqB,OAAOvB,EAAKE,UAAUsB,OAClCrB,EAASoB,OAAOvB,EAAKG,OAAOqB,OAEvBC,EAAI,EAAGA,GAAKtB,EAAQsB,IAC3BrB,EAAcqB,EAAGxB,GACjBA,GAAcC,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst inputFormUrl = document.querySelector(\".form\")\nconst urls = {\n  firstDelay: document.querySelector('[name=\"delay\"]'),\n  stepDelay: document.querySelector('[name=\"step\"]'),\n  amount: document.querySelector('[name=\"amount\"]'),\n}\n\ninputFormUrl.addEventListener(\"submit\", onFormSubmit);\n\nfunction onFormSubmit(event) {\nevent.preventDefault();\n\nlet firstDelay = Number(urls.firstDelay.value);\nlet stepDelay = Number(urls.stepDelay.value);\nlet amount = Number(urls.amount.value);\n\nfor (let i = 1; i <= amount; i++) {\n  createPromise(i, firstDelay);\n  firstDelay += stepDelay;\n}\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  const promise = new Promise((resolve, reject) =>{\n    setTimeout(() => { \n      if (shouldResolve) {\n    resolve();\n  } else {\n    reject();\n  } }, delay);\n});\npromise\n.then(() => {\n  `${Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`)}`;\n})\n.catch(() => {\n  `${Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`)}`;\n});\n}\n\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$inputFormUrl","document","querySelector","$ce04d3a99e08e73b$var$urls","firstDelay","stepDelay","amount","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","then","Notify","success","concat","catch","failure","addEventListener","event","preventDefault","Number","value","i"],"version":3,"file":"03-promises.7fbcc376.js.map"}