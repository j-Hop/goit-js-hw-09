{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAeC,SAASC,cAAc,SACtCC,EAAO,CACXC,WAAYH,SAASC,cAAc,kBACnCG,UAAWJ,SAASC,cAAc,iBAClCI,OAAQL,SAASC,cAAc,oBAkBjC,SAASK,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtB,IAAIC,SAAQ,CAACC,EAASC,KACpCC,YAAW,KACLN,EACNI,IAEAC,GAAQ,GACLN,EAAM,IAGZQ,MAAK,KACDnB,EAAAoB,OAAOC,QAAQ,uBAAqBX,QAAiBC,MAAU,IAEnEW,OAAM,KACFtB,EAAAoB,OAAOG,QAAQ,sBAAoBb,QAAeC,MAAU,G,CA/BjET,EAAasB,iBAAiB,UAE9B,SAAsBC,GACtBA,EAAMC,iBAEN,IAAIpB,EAAaqB,OAAOtB,EAAKC,WAAWsB,OACpCrB,EAAYoB,OAAOtB,EAAKE,UAAUqB,OAClCpB,EAASmB,OAAOtB,EAAKG,OAAOoB,OAEhC,IAAK,IAAIC,EAAI,EAAGA,GAAKrB,EAAQqB,IAC3BpB,EAAcoB,EAAGvB,GACjBA,GAAcC,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst inputFormUrl = document.querySelector(\".form\")\nconst urls = {\n  firstDelay: document.querySelector('[name=\"delay\"]'),\n  stepDelay: document.querySelector('[name=\"step\"]'),\n  amount: document.querySelector('[name=\"amount\"]'),\n}\n\ninputFormUrl.addEventListener(\"submit\", onFormSubmit);\n\nfunction onFormSubmit(event) {\nevent.preventDefault();\n\nlet firstDelay = Number(urls.firstDelay.value);\nlet stepDelay = Number(urls.stepDelay.value);\nlet amount = Number(urls.amount.value);\n\nfor (let i = 1; i <= amount; i++) {\n  createPromise(i, firstDelay);\n  firstDelay += stepDelay;\n}\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  const promise = new Promise((resolve, reject) =>{\n    setTimeout(() => { \n      if (shouldResolve) {\n    resolve();\n  } else {\n    reject();\n  } }, delay);\n});\npromise\n.then(() => {\n  `${Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`)}`;\n})\n.catch(() => {\n  `${Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`)}`;\n});\n}\n\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$inputFormUrl","document","querySelector","$47d4ff9957288465$var$urls","firstDelay","stepDelay","amount","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","then","Notify","success","catch","failure","addEventListener","event","preventDefault","Number","value","i"],"version":3,"file":"03-promises.13d4807b.js.map"}